name: Pull-Push - Docker Images

on:
#  push:
#    branches:
#      - master
#    paths:
#      - 'Dockerfile'
  workflow_dispatch:
    inputs:
#       baseimage:
#         description: 'Want to push image to ECR?'
#         required: true
#         default: 'Yes'
      ECR_REPOSITORY:
         type: choice
         description: ECR_REPOSITORY
         options:
           - 'jaegertracing/jaeger-agent'
           - 'falcosecurity/falco-no-driver'
           - 'falcosecurity/falcoctl'
           - 'falcosecurity/falco-driver-loader'
           - 'falcosecurity/falcosidekick'
           - 'falcosecurity/falcosidekick-ui'
           - 'redislabs/redisearch'
           - 'fluent/fluent-bit'
           - 'alertlogic/al-agent-container'
           - 'mysql'
      IMAGE_TAG:
         description: IMAGE_TAG
         default: 1.0.0

jobs:
  
  build:
    
    name: Pull and Push Image
    runs-on: ubuntu-latest
    defaults:
      run:
        shell: bash
   
    steps:

    - name: Check out code
      uses: actions/checkout@v2
    
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-west-2

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Pull and Push image to ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: ${{ github.event.inputs.ECR_REPOSITORY }}
        IMAGE_TAG: ${{ github.event.inputs.IMAGE_TAG }}
      run: |
        docker pull $ECR_REPOSITORY:$IMAGE_TAG
        docker image tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        docker images -a
        docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #ignore below#
        #docker pull falcosecurity/falco-no-driver:0.32.2
        #docker pull falcosecurity/falco-driver-loader:0.32.2
        #docker pull jaegertracing/jaeger-agent:1.30.0
        #docker pull fluent/fluent-bit:2.0.8
        #docker pull alertlogic/al-agent-container:latest
        #docker image tag alertlogic/al-agent-container:latest $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #docker image tag fluent/fluent-bit:2.0.8 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #docker image tag jaegertracing/jaeger-agent:1.30.0 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #docker image tag falcosecurity/falco-no-driver:0.32.2 $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #docker image tag falcosecurity/falco-driver-loader:0.32.2 $ECR_REGISTRY/falcosecurity/falco/falco-driver-loader:0.32.2
        #docker images -a
        #docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
        #docker push $ECR_REGISTRY/falcosecurity/falco/falco-driver-loader:0.32.2
